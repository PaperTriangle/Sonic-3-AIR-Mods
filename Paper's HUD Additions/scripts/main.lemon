global bool phud.allowsuper
global bool phud.allowsuperesu
global bool phud.name
global bool phud.lives
global bool phud.livesborder
global bool phud.transform
global u8 phud.transformstyle
global s8 phud.offset

define u8 global.xtrachar = u8[0xffffe654]

//# address-hook(0x00db44) end(0x00dbb2)
function void RenderHUD()
{

	if (DEBUG_DISABLE_HUD)
		return

	u64 compatName = (Mods.isModActive("Haru's Forever-esque HUD")) ? "haru" : "s3"

	if (phud.transform)
	{
	
		s16 baseX = global.level_started

		bool isBonusStage = (global.zone >= 0x13 && global.zone <= 0x15)
		if (!debug_mode.state)
		{
			if (!isBonusStage)
			{	
				u8 fade
				if (u8[0xffffb040] && u8[0xffffb02f] == 0 && u8[0xffffb02e] == 0)
					fade = 255
				else
					fade = 160

				if (CanTransform() && phud.offset > 0)
				{
					phud.offset -= 0x08
				}
				else if (!CanTransform() && phud.offset < 0x70)
				{
					phud.offset += 0x08
				}

				u8 possibleSuperForm = 0	// 1 for Super, 2 for Hyper

				// Special handling for Tails
				if (isMainCharacter(CHARACTER_TAILS) && !Game.getSetting(SETTING_HYPER_TAILS))
				{
					// Ready to get Super Tails?
					if (global.super_emeralds >= 7)
					{
						possibleSuperForm = 2
					}
				}
				else
				{
					// Can go super?
					if (global.super_emeralds >= 7)
					{
						possibleSuperForm = 2
					}
					else if ((global.chaos_emeralds >= 7) && (global.traded_emeralds == 0 && !Mods.isModActive("Super Post-Trade")))
					{
						possibleSuperForm = 1
					}
				}

				u64 transformstring = (phud.transformstyle != 0) ? ((phud.transformstyle == 1) ? stringformat("border_%s", compatName) : stringformat("ring_%s", compatName)) : "normal"

				if (global.super_emeralds >= 7 && (super.active == 1  || super.active.tails == 1 || !Mods.isModActive("Characters Go Super Then Hyper")) && !(global.xtrachar == 0 && isMainCharacter(CHARACTER_TAILS) && !Game.getSetting(SETTING_HYPER_TAILS)))
					HUD.drawSprite(stringformat("hyper_icon_%s", transformstring), getScreenWidth() - (baseX + 0x10 + HUD.useMobileLivesDisplay() * 0x28) + phud.offset, 0x10 + HUD.useMobileLivesDisplay() * 0x14, 0xe000)
				else
					HUD.drawSprite(stringformat("super_icon_%s", transformstring), getScreenWidth() - (baseX + 0x10 + HUD.useMobileLivesDisplay() * 0x28) + phud.offset, 0x10 + HUD.useMobileLivesDisplay() * 0x14, 0xe000)
				
				Renderer.drawCustomSprite("@input_icon_button_Y", getScreenWidth() - (baseX + 0x24) + phud.offset, 0x10 + HUD.useMobileLivesDisplay() * 0x14, 0, SPRITE_FLAG_PRIO, 0xe000, 0, fade)
				
			}
		}
	}

	if (!phud.lives)
	{
		base.RenderHUD()
		return
	}
	
	s16 baseX = global.level_started
	if (baseX < 0)
	{
		baseX += 8
		global.level_started = baseX
	}
	baseX += 0x0f
	s16 baseY = 0x08
	u16 renderQueue = 0xe000

	bool isBonusStage = (global.zone >= 0x13 && global.zone <= 0x15)
#if STANDALONE
	if (!debug_mode.state)
	{
		if (!isBonusStage)
		{
		
			// Lives (not visible in Time Attack or with infinite lives setting)
		if (!Game.isTimeAttack() && !Game.getSetting(SETTING_INFINITE_LIVES))
		{
			bool useMobilePosition = HUD.useMobileLivesDisplay()
			u16 px = useMobilePosition ? (getScreenWidth() - baseX - 0x30) : baseX
			u16 py = useMobilePosition ? baseY : 200

			u64 characterSprite = ((phud.allowsuper && global.xtrachar == 0) || (phud.allowsuperesu && global.xtrachar > 0)) ? getCharacterSpriteKey(u8[0xffffb000 + 0x38]) : getCharacterSpriteKey(u8[0xffffb000 + 0x38], false)
			u64 characterName = getCharacterSpriteKey(u8[0xffffb000 + 0x38], false)
			
			if (((phud.allowsuper && global.xtrachar == 0) || (phud.allowsuperesu && global.xtrachar > 0)) && !Renderer.hasCustomSprite(stringformat("%s_lives_icon", characterSprite)))
				characterSprite = getCharacterSpriteKey(u8[0xffffb000 + 0x38], false)
			
			if (Mods.isModActive("Amy Galore: Standalone edition") && (global.characters == 0x04 || global.characters == 0x05))
			{
				characterSprite = getCharacterSpriteKey(u8[0xffffb000 + 0x38])
				characterName = getCharacterSpriteKey(u8[0xffffb000 + 0x38])
			}
			
			if (((phud.allowsuper && global.xtrachar == 0) || (phud.allowsuperesu && global.xtrachar > 0)) && !Renderer.hasCustomSprite(stringformat("%s_lives_icon", characterSprite)))
			{
				base.RenderHUD()
				return
			}
			
			if (characterSprite == "character_tails" && Mods.isModActive("Plush's Ariff Tails"))
				characterSprite = "character_ariff_tails"
			
			if (characterName == "character_tails" && !(global.region_code & 0x80))
				characterName = "character_miles"
			
			HUD.drawSprite(stringformat("%s_lives_icon", characterSprite), px, py, renderQueue)
			++renderQueue
			
			u64 livesborderstring = (phud.livesborder) ? stringformat("ring_%s", compatName) : stringformat("border_%s", compatName) 
			
			HUD.drawSprite(stringformat("%s_lives_icon_%s", characterSprite, livesborderstring), px, py, renderQueue)
			++renderQueue
			
			
			if (phud.name)
			{
				HUD.drawSprite(stringformat("%s_lives_text_%s", characterName, compatName), px, py, renderQueue)
			}
			else
			{
				HUD.drawSprite(stringformat("no_lives_text_%s", compatName), px, py, renderQueue)
			}
			++renderQueue

			if (lives_counter >= 10)
			{
				HUD.drawSmallDigit(u16((lives_counter / 10) % 10), px + 0x18, py + 8, renderQueue)
				HUD.drawSmallDigit(u16(lives_counter % 10), px + 0x20, py + 8, renderQueue)
			}
			else
			{
				HUD.drawSmallDigit(u16(lives_counter % 10), px + 0x18, py + 8, renderQueue)
			}
			++renderQueue
		}
		
			// Score
			HUD.drawSprite("hud_text_score", baseX, baseY, renderQueue)
			++renderQueue
			HUD.drawNumber("hud_digit_%d", player.score * 10, baseX + 0x58, baseY, renderQueue)
			++renderQueue

			// Time
			{
				bool show = (timer.minutes < 9 || isBonusStage || (level.framecounter & 0x08) || Game.getSetting(SETTING_INFINITE_TIME))
				HUD.drawSprite(show ? "hud_text_time" : "hud_text_time_red", baseX, baseY + 0x10, renderQueue)
				++renderQueue

				// Unfortunately, the time progress is done later inside the frame, so we don't have the right value in "timer.frames" yet
				//  -> If the conditions for time progress are met, add one and everything will be alright
				u16 minutes = timer.minutes
				u16 seconds = timer.seconds
				u16 frames = timer.frames
				if (hud.dirty.timer && !global.game.paused && timer.alldata < 0x93b3b)	// That is 9:59 and 59 frames
				{
					++frames
					seconds += (frames / 60)
					minutes += (seconds / 60)
					frames %= 60
					seconds %= 60
				}
				u16 centiseconds = (frames * 99 + 30) / 59

				u16 px = (minutes >= 10) ? (baseX + 8) : baseX
				if (Game.getSetting(SETTING_EXTENDED_HUD))
				{
					if (minutes >= 10)
						HUD.drawDigit(minutes / 10, px + 0x20, baseY + 0x10, renderQueue)
					HUD.drawDigit(minutes % 10, px + 0x28, baseY + 0x10, renderQueue)
					HUD.drawSprite("hud_char_minutes", px + 0x30, baseY + 0x10, renderQueue)
					HUD.drawDigit(seconds / 10, px + 0x38, baseY + 0x10, renderQueue)
					HUD.drawDigit(seconds % 10, px + 0x40, baseY + 0x10, renderQueue)
					HUD.drawSprite("hud_char_seconds", px + 0x48, baseY + 0x10, renderQueue)
					HUD.drawDigit(centiseconds / 10, px + 0x50, baseY + 0x10, renderQueue)
					if (minutes < 10)
						HUD.drawDigit(centiseconds % 10, px + 0x58, baseY + 0x10, renderQueue)
				}
				else
				{
					if (minutes >= 10)
						HUD.drawDigit(minutes / 10, px + 0x20, baseY + 0x10, renderQueue)
					HUD.drawDigit(minutes % 10, px + 0x28, baseY + 0x10, renderQueue)
					HUD.drawSprite("hud_char_colon", px + 0x30, baseY + 0x10, renderQueue)
					HUD.drawDigit(seconds / 10, px + 0x38, baseY + 0x10, renderQueue)
					HUD.drawDigit(seconds % 10, px + 0x40, baseY + 0x10, renderQueue)
				}
				++renderQueue
			}
		}

		// Rings
		{
			u16 py = (isBonusStage) ? baseY : baseY + 0x20
			bool show = (ring_counter != 0 || (level.framecounter & 0x08))
			HUD.drawSprite(show ? "hud_text_rings" : "hud_text_rings_red", baseX, py, renderQueue)
			++renderQueue

			u16 px = baseX + (!isBonusStage && Game.getSetting(SETTING_EXTENDED_HUD) ? 0x58 : 0x40)
			for (u32 value = ring_counter;;)
			{
				HUD.drawDigit(value % 10, px, py, renderQueue)
				px -= 8
				value /= 10
				if (value == 0)
					break
			}
			++renderQueue
		}
	}
	else
#endif
	{
		D4 = (isBonusStage) ? 8 : 0

		if ((level.framecounter & 0x08) == 0)
		{
			if (ring_counter == 0)
			{
				D4 += 2		// Set rings HUD text to flicker
			}
			if (timer.minutes == 9 && !isBonusStage)
			{
				D4 += 4		// Set timer HUD text to flicker
			}
		}

		// Targets:
		//  - 0x00dbc2	-> D4.u16 = 0x00		// Complete HUD text
		//  - 0x00dc00	-> D4.u16 = 0x02		// HUD with rings text flickering
		//  - 0x00dc32	-> D4.u16 = 0x04		// HUD with time text flickering
		//  - 0x00dc6a	-> D4.u16 = 0x06		// HUD with both rings and time flickering
		//  - 0x00dc96	-> D4.u16 = 0x08		// Bonus stage HUD
		//  - 0x00dcb6	-> D4.u16 = 0x0a		// Bonus stage HUD with rings text flickering
		A1 = tableLookupAddress(0x00dbb6, D4.u16)

		D4.s16 = u16[A1] - 1
		D0.s16 = baseX + 0x80
		D1.u16 = 0x0108
		D5.u16 = 0x86ca
		A1 += 2
		if (D4.s16 >= 0)
		{
			writeToSpriteTable(renderQueue)
		}
	}
}

function bool CanTransform()
{
	if (global.zone_act == 0x0c00)
		return false

	if ((super.active == 1  || super.active.tails == 1) && global.super_emeralds <= 6)
		return false
		
	if (super.active == 0xff || super.active.tails == 0xff)
		return false

	u8 possibleSuperForm = 0	// 1 for Super, 2 for Hyper

	// Tails is first player?
	if (char.character == CHARACTER_TAILS)
	{
		if (!isMainCharacter(CHARACTER_TAILS))
			return false
	}

	// Special handling for Tails
	if (isMainCharacter(CHARACTER_TAILS) && !Game.getSetting(SETTING_HYPER_TAILS))
	{
		// Ready to get Super Tails?
		if (global.super_emeralds >= 7)
		{
			possibleSuperForm = 2
		}
	}
	else
	{
		// Can go super?
		if (global.super_emeralds >= 7)
		{
			possibleSuperForm = 2
		}
		else if (global.chaos_emeralds >= 7 && (global.traded_emeralds == 0 && !Mods.isModActive("Super Post-Trade")))
		{
			possibleSuperForm = 1
		}
	}

	if (possibleSuperForm == 0)
		return false

	u8 hyper_count = 0
	if (Mods.isModActive("Characters Go Super Then Hyper"))
	{
		if (System.getGlobalVariableValueByName("HyperRingCost") == 0)
			hyper_count = 50
		else if (System.getGlobalVariableValueByName("HyperRingCost") == 1)
			hyper_count = 75
		else if (System.getGlobalVariableValueByName("HyperRingCost") == 2)
			hyper_count = 100
	}
	
	if (((ring_counter < 50 && (super.active == 0 && super.active.tails == 0)) || (Mods.isModActive("Characters Go Super Then Hyper") && (super.active == 1 || super.active.tails == 1) && (ring_counter < hyper_count))) || !hud.dirty.timer)
		return false

	return true
}




function void Character.Initialization.shared(u8 character)
{
	phud.offset = 0x70

	base.Character.Initialization.shared(character)

}